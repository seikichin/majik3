Quick documentation for doors()
{
  Doors can be added to rooms by using add_door() command which
  takes a huge amount of arguments. I think this is better system
  than creating new object for every room. 

    add_door (direction, destination, name, material, key, difficulty, state);

  direction is for example "north"
  destination is the filename of destination
  name is the id for the room, for example "door" or "gate"
  material is the material of the room, for example "iron"
  key is the filename of a key
  difficulty is difficulty of the lock if there is a lock
  state is the default state for the room:

    0 = open
    1 = closed
    2 = locked

  key can be 0 if there is no keyhole. if the key is not 0
  then it MUST be the correct path of the key otherwise bugs
  can be happen.

  Example 1 with no keyhole (when using path.h):

  add_door("north", ROOM_PATH + "room1", "door", "iron", 0, 0, 0);

  Example 2 with keyhole (when using path.h):

  add_door("north", ROOM_PATH + "room1", "door", "iron", ITEM_PATH + "key1", 30, 2);
}

Door difficulty scale (ie. examples of different locks)

 1 - 15 crappy lock for barn doors (and other doors of such "importance")
16 - 30 poor locks for common apartments and cheap chests
31 - 45 locks of modrate quality. for common chests and doors.
46 - 60 quality locks for the rich people (and for their chests, too)
61 - 75 really high-quality locks that cost a lot. for chests full of huge treasures, for doors to a king's chamber and other such places of high importance.
( 75% is max. difficulty for human-made non-magical locks )
76 - 90 locks of this quality are beyond human skill and therefore should be used ONLY in very rarely and wisely.

comments and stuff about lock-levels to Sinister

_/_
 /Lord Sinister
